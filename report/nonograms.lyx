#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 620
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children no
\language american
\language_package default
\inputencoding utf8
\fontencoding auto
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_roman_osf false
\font_sans_osf false
\font_typewriter_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement class
\float_alignment class
\paperfontsize 11
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_formatted_ref 0
\use_minted 0
\use_lineno 0
\index Index
\shortcut idx
\color #008080
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip halfline
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tablestyle default
\listings_params "frame=lines,breaklines=true,breakatwhitespace=true,basicstyle={\ttfamily \small}"
\tracking_changes false
\output_changes false
\change_bars false
\postpone_fragile_content true
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\docbook_table_output 0
\docbook_mathml_prefix 1
\end_header

\begin_body

\begin_layout Title
Solving Nonograms with ASP (working title)
\end_layout

\begin_layout Author
Daniela Yordanova 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 Fabian Kraus
\end_layout

\begin_layout Abstract
...
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Introduction to Nonograms
\end_layout

\begin_layout Standard
...
\end_layout

\begin_layout Standard
test citation:
 
\begin_inset CommandInset citation
LatexCommand cite
key "NonogramRelaxationsPaper09"
literal "false"

\end_inset


\end_layout

\begin_layout Section
Solving Nonograms with ASP
\end_layout

\begin_layout Standard
...
\end_layout

\begin_layout Subsection
Nonogram encoding
\end_layout

\begin_layout Standard
We encode nonograms by adding a predicate corresponding to every line and column hint.
 Shown below is an example of a 5x5 nonogram encoding:
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "../nonograms/example_01.lp"
lstparams "language=Prolog,linerange={5-}"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
TODO:
 add image of this example nonogram
\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\emph on
Brute Force
\emph default
 approach
\end_layout

\begin_layout Standard
The first,
 most direct and least optimized attempt at a nonogram solver using ASP will be referred to as the 
\emph on
brute force
\emph default
 solver in the following.
 It works like this:
 
\begin_inset Newline newline
\end_inset

First,
 define a rectangular pixel grid and indicate that every pixel must have exactly one out of a given set of colors,
 in our case just black (
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

0
\end_layout

\end_inset

) and white (
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

1
\end_layout

\end_inset

):
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "../solvers/brute-force.lp"
lstparams "language=Prolog,linerange={9-14}"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
Then impose the following three constraints independently for every line (i.e.
 row or column) onto this black and white pixel grid:
\end_layout

\begin_layout Enumerate
The total number of black pixels must match the summed length of all hints.
\end_layout

\begin_layout Enumerate
The first black pixel must be followed by exactly 
\begin_inset Formula $l_{1}-1$
\end_inset

 further black pixels,
 where 
\begin_inset Formula $l_{1}$
\end_inset

 is the length of the first hint.
 The 
\begin_inset Formula $\left(l_{1}+1\right)$
\end_inset

-th black pixel must be followed by exactly 
\begin_inset Formula $l_{2}-1$
\end_inset

 further black pixels,
 where 
\begin_inset Formula $l_{2}$
\end_inset

 is the length of the second hint,
 etc.
\end_layout

\begin_layout Enumerate
The pixel immediately after the 
\begin_inset Formula $l_{1}$
\end_inset

-th black pixel may not be black.
 Similarly,
 the pixel immediately after the 
\begin_inset Formula $\left(l_{1}+l_{2}\right)$
\end_inset

-th black pixel may not be black,
 etc.
\end_layout

\begin_layout Standard
The first constraint can be implemented directly from the pixel grid:
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "../solvers/brute-force.lp"
lstparams "language=Prolog,linerange={31-33}"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
For formulating the other two constraints,
 a crucial piece of information is the position of the first black pixel,
 the next first black pixel after the first block,
 etc.
 For each hint,
 these positions are stored using a helper predicate 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

first_black
\backslash
4
\end_layout

\end_inset

,
 which is of the format 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

first_black(line type,
 line number,
 block index,
 position)
\end_layout

\end_inset

.
 Then constraints two and three may be encoded like this:
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "../solvers/brute-force.lp"
lstparams "language=Prolog,linerange={53,54,57,58}"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
Since all of these constraints are identical for rows and columns,
 we added the following helper predicates used above for generalized line handling:
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "../solvers/brute-force.lp"
lstparams "language=Prolog,linerange={16-27}"
literal "false"

\end_inset

This has the advantage of only needing to formulate each constraint once,
 instead of one variant for rows and one variant for columns.
\end_layout

\begin_layout Standard
2.3.
 Symbolic Block Start Solver
\end_layout

\begin_layout Standard
A first step into a more optimized approach was the implementation of the 
\emph on
symbolic block start
\emph default
 solver.
 First,
 the idea of encoding possible solution blocks only by their first pixel was further expanded on,
 but instead of looking at individual cell states,
 the starting position of each 
\emph on
block of cells
\emph default
 was of interest.
 This approach was also utilized in v4hn/nonogram_asp and will be further referred as the 
\emph on
symbolic block start
\emph default
 technique.
 [add table with comparison]
\end_layout

\begin_layout Standard
Furthermore,
 an attempt was made to optimize the search algorithm in pursuit of greater efficiency.
 To that end,
 the approach outlined in Solving Nonograms:
 A Constraint Satisfaction Approach was adopted.
 In the proposed method,
 the solver operates on separate row and column problems,
 later merging them in an agreement task.
 While faster than a brute force approach,
 the algorithm remains too naive to efficiently handle larger search spaces.
 This was tested on the Sierp#12548 nonogram,
 which has a size of 47x40 and takes about [exact time needed] minutes to solve.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "references"
options "bibtotoc,plain"
encoding "default"

\end_inset


\end_layout

\end_body
\end_document
